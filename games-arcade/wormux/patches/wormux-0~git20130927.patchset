From 869ec86267085f355a9dbe017f1d9be1c28fd975 Mon Sep 17 00:00:00 2001
From: domininkstrak2001 <dominikstrak2001@gmail.com>
Date: Sun, 16 Dec 2018 02:09:55 +0000
Subject: [PATCH 1/2] Changes to make wormux compilable with Haiku

---
 configure.ac                    |  6 +++---
 lib/warmux/net/network.cpp      |  1 +
 lib/warmux/tools/file_tools.cpp | 15 +++++++++++----
 src/tool/copynpaste.cpp         |  7 ++++++-
 4 files changed, 21 insertions(+), 8 deletions(-)

diff --git a/configure.ac b/configure.ac
index a799477..19d4e22 100644
--- a/configure.ac
+++ b/configure.ac
@@ -28,7 +28,7 @@ AM_CONDITIONAL([NLS], test "$USE_NLS" = "yes")
 dnl ========================================================================
 dnl === Check for tools                                                    =
 dnl ========================================================================
-
+LDFLAGS="-lpthread"
 AC_PROG_MAKE_SET
 AC_PROG_CC
 AC_PROG_CXX
@@ -43,7 +43,7 @@ if test "x$cxx_present" != "xyes"; then
   AC_MSG_ERROR([*** No C++ compiler can be found!])
 fi
 
-AX_CFLAGS_WARN_ALL([CXXFLAGS])
+#AX_CFLAGS_WARN_ALL([CXXFLAGS])
 
 # ==========================================================================
 # == Set flags for various environments                                    =
@@ -305,7 +305,7 @@ int main(void)
 dnl === Check for curl =====================================================
 
 LIBCURL_CHECK_CONFIG([yes],[7.0],[check_curl=yes],[check_curl=no])
-
+AC_CHECK_LIB(network, socket)
 dnl === Check for libosso ==================================================
 
 AC_ARG_ENABLE(maemo, AC_HELP_STRING([--enable-maemo], [enable Maemo support]) )
diff --git a/lib/warmux/net/network.cpp b/lib/warmux/net/network.cpp
index 77954e1..410961b 100644
--- a/lib/warmux/net/network.cpp
+++ b/lib/warmux/net/network.cpp
@@ -20,6 +20,7 @@
  *****************************************************************************/
 
 #include <sys/types.h>
+#include <sys/time.h>
 #include <iostream>
 
 // Standard header, only needed for the following method
diff --git a/lib/warmux/tools/file_tools.cpp b/lib/warmux/tools/file_tools.cpp
index 9b9062e..4298d5a 100644
--- a/lib/warmux/tools/file_tools.cpp
+++ b/lib/warmux/tools/file_tools.cpp
@@ -23,7 +23,8 @@
 #include <sys/stat.h>
 #include <errno.h>
 #include <cstdlib>
-
+#include <sys/types.h>
+#include <unistd.h>
 #ifdef WIN32
    // To get SHGetSpecialFolderPath
 #  define _WIN32_IE   0x400
@@ -298,12 +299,15 @@ FolderSearch* OpenFolder(const std::string& dirname)
 
 const char* FolderSearchNext(FolderSearch *f, bool& file)
 {
+  struct stat s;
   while ((f->file = readdir(f->dir)) != NULL) {
-
+	
 #ifdef __SYMBIAN32__
     if (f->file->d_namlen && DoesFolderExist(f->dname+"/"+std::string(f->file->d_name))) {
 #else
-    if (f->file->d_type == DT_DIR) {
+//    if (f->file->d_type == DT_DIR) {
+	stat(f->file->d_name, &s);
+	if (s.st_mode & S_IFDIR) {
 #endif
       // If we are also looking for files, report it isn't one
       if (file)
@@ -319,7 +323,10 @@ const char* FolderSearchNext(FolderSearch *f, bool& file)
 #ifdef __SYMBIAN32__
     if (f->file->d_namlen && DoesFileExist(f->dname+"/"+std::string(f->file->d_name))) {
 #else
-    if (f->file->d_type == DT_REG) {
+//    if (f->file->d_type == DT_REG) {
+//	struct stat s;
+	stat(f->file->d_name, &s);
+	if (s.st_mode & S_IFREG) {	
 #endif
       file = true;
       return f->file->d_name;
diff --git a/src/tool/copynpaste.cpp b/src/tool/copynpaste.cpp
index ef2ce32..6712634 100644
--- a/src/tool/copynpaste.cpp
+++ b/src/tool/copynpaste.cpp
@@ -19,9 +19,14 @@
  * Retrieve string pasted depending on OS mechanisms.
  *****************************************************************************/
 #include "copynpaste.h"
+#define SDL_VIDEO_DRIVER_X11
+#include <SDL_syswm.h>
 #include <WARMUX_config.h>
+#include <X11/Xlib.h>
+#include <X11/Xatom.h>
+#include <X11/Xutil.h>
+#include <X11/Xos.h>
 
-#include <SDL_syswm.h>
 
 #ifdef WIN32
 bool RetrieveBuffer(std::string& text, std::string::size_type& pos)
-- 
2.19.1


From d8b262f43a4d8e83153860294c28a6cc1bd3f733 Mon Sep 17 00:00:00 2001
From: dominikstrak2001 <dominikstrak2001@gmail.com>
Date: Sun, 16 Dec 2018 02:30:48 +0000
Subject: [PATCH 2/2] Further changes

---
 lib/warmux/action/action.cpp       |  2 +-
 lib/warmux/include/WARMUX_action.h |  2 +-
 lib/warmux/net/download.cpp        | 14 +++++++-------
 src/graphic/surface.cpp            |  4 ++++
 src/interface/weapon_menu.cpp      |  2 +-
 tools/list_games/main.cpp          |  1 +
 6 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/lib/warmux/action/action.cpp b/lib/warmux/action/action.cpp
index 657a893..c94a521 100644
--- a/lib/warmux/action/action.cpp
+++ b/lib/warmux/action/action.cpp
@@ -81,7 +81,7 @@ Action::~Action()
 }
 
 // Build an action from a network packet
-Action::Action(const char *buffer, DistantComputer* _creator)
+Action::Action(char *buffer, DistantComputer* _creator)
 {
   m_creator = _creator;
 
diff --git a/lib/warmux/include/WARMUX_action.h b/lib/warmux/include/WARMUX_action.h
index 2206429..3bd4f1d 100644
--- a/lib/warmux/include/WARMUX_action.h
+++ b/lib/warmux/include/WARMUX_action.h
@@ -168,7 +168,7 @@ public:
   Action(Action_t type, Double value1, Double value2);
 
   // Build an action from a network packet
-  Action(const char* buffer, DistantComputer* _creator);
+  Action(char* buffer, DistantComputer* _creator);
 
   ~Action();
 
diff --git a/lib/warmux/net/download.cpp b/lib/warmux/net/download.cpp
index bd36d3b..5ffd05d 100644
--- a/lib/warmux/net/download.cpp
+++ b/lib/warmux/net/download.cpp
@@ -47,24 +47,24 @@ Downloader::Downloader()
 #endif
 
   curl = curl_easy_init();
-  curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, download_callback);
+  curl_easy_setopt((CURL*)curl, CURLOPT_WRITEFUNCTION, download_callback);
   curl_error_buf = new char[CURL_ERROR_SIZE];
-  curl_easy_setopt(curl, CURLOPT_ERRORBUFFER, curl_error_buf);
-  curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1);
+  curl_easy_setopt((CURL*)curl, CURLOPT_ERRORBUFFER, curl_error_buf);
+  curl_easy_setopt((CURL*)curl, CURLOPT_FOLLOWLOCATION, 1);
 }
 
 Downloader::~Downloader()
 {
-  curl_easy_cleanup(curl);
+  curl_easy_cleanup((CURL*)curl);
   curl_global_cleanup();
   delete[] curl_error_buf;
 }
 
 bool Downloader::Get(const char* url, FILE* file)
 {
-  curl_easy_setopt(curl, CURLOPT_FILE, file);
-  curl_easy_setopt(curl, CURLOPT_URL, url);
-  CURLcode r = curl_easy_perform(curl);
+  curl_easy_setopt((CURL*)curl, CURLOPT_FILE, file);
+  curl_easy_setopt((CURL*)curl, CURLOPT_URL, url);
+  CURLcode r = curl_easy_perform((CURL*)curl);
   fflush(file);
 
   if (r == CURLE_OK)
diff --git a/src/graphic/surface.cpp b/src/graphic/surface.cpp
index 3452665..9d86b90 100644
--- a/src/graphic/surface.cpp
+++ b/src/graphic/surface.cpp
@@ -29,6 +29,10 @@
 #include "graphic/surface.h"
 #include "tool/math_tools.h"
 
+#ifndef Z_BEST_COMPRESSION
+#  include <zlib.h>
+#endif
+
 /* texturedPolygon import from SDL_gfx v2.0.15 */
 #if (SDL_GFXPRIMITIVES_MAJOR == 2) && (SDL_GFXPRIMITIVES_MINOR == 0) && (SDL_GFXPRIMITIVES_MICRO < 14)
 #include "graphic/textured_polygon.h"
diff --git a/src/interface/weapon_menu.cpp b/src/interface/weapon_menu.cpp
index 8487f52..c852588 100644
--- a/src/interface/weapon_menu.cpp
+++ b/src/interface/weapon_menu.cpp
@@ -391,7 +391,7 @@ void WeaponsMenu::Draw()
 Weapon * WeaponsMenu::UpdateCurrentOverflyItem(const Polygon * poly)
 {
   if (!show)
	-    return false;
+    return NULL;
   const std::vector<PolygonItem *>& items = poly->GetItem();
   WeaponMenuItem * tmp;
   Interface::GetInstance()->SetCurrentOverflyWeapon(NULL);
diff --git a/tools/list_games/main.cpp b/tools/list_games/main.cpp
index 46496aa..aee5c08 100644
--- a/tools/list_games/main.cpp
+++ b/tools/list_games/main.cpp
@@ -1,5 +1,6 @@
 #include <stdio.h>
 #include <getopt.h>
+#include <unistd.h>
 #include <WARMUX_types.h>
 #include <WARMUX_network.h>
 #include <WARMUX_index_server.h>
-- 
2.19.1